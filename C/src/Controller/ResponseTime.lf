target C {
    timeout: 1 sec
}
reactor PhysicalPlant {
    input control:double;
    output sensor:double;
    timer t(0,  33 msec);
    state last_sensor_time:time(0);
    reaction(t) -> sensor {=
        SET(sensor, 42);
        self->last_sensor_time = get_physical_time();
    =}
    reaction(control) {=
        instant_t control_time = get_physical_time();
        info_print("Latency %lld.", control_time - self->last_sensor_time);
    =} STP(33 msec) {=
        warning_print("STP violation.");
    =}
}
reactor Controller {
    input sensor:double;
    output control:double;
    
    output request_for_planning:double;
    input planning:double;
    
    reaction(sensor) -> request_for_planning {=
        SET(request_for_planning, sensor->value);
    =}
    reaction(planning) -> control {=
        SET(control, planning->value);
    =}
}
reactor Planner {
    input request:double;
    output response: double;
    reaction(request) -> response {=
        lf_nanosleep(MSEC(10));
        SET(response, request->value);
    =}
}
main reactor {
    p = new PhysicalPlant();
    c = new Controller();
    pl = new Planner();
    
    p.sensor -> c.sensor;
    c.request_for_planning -> pl.request;
    pl.response -> c.planning;
    c.control -> p.control;
}